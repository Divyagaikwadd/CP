Painter's Partition Problem
#include <iostream>
#include <vector>

using namespace std;

bool isPossible(vector<int>& boards, int k, int mid) {
    int painters = 1;
    int boardSum = 0;

    for (int i = 0; i < boards.size(); ++i) {
        if (boardSum + boards[i] <= mid) {
            boardSum += boards[i];
        } else {
            painters++;
            if (painters > k || boards[i] > mid) {
                return false;
            }
            boardSum = boards[i];
        }
        
    }
    return true;
}

int findLargestMinDistance(vector<int>& boards, int k) {
    int s = 0;
    int e = 0;

    for (int i = 0; i < boards.size(); ++i) {
        e += boards[i];
    }
    int ans = -1;

    while (s <= e) {
        int mid = s + (e - s) / 2;

        if (isPossible(boards, k, mid)) {
            ans = mid;
            e = mid - 1;
        } else {
            s = mid + 1;
        }
    }
    return ans;
}